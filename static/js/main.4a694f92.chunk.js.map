{"version":3,"sources":["util.js","3DStuff/visualizer.js","navigation/navbar.js","App.js","serviceWorker.js","index.js"],"names":["randomNumberInRange","min","max","Math","floor","random","getRandomValueFromArray","arr","length","COLOR_PALETTE","Visualizer","setupAudio","window","onclick","audioCtx","AudioContext","webkitAudioContext","analyser","createAnalyser","frequencyData","Uint8Array","frequencyBinCount","audio","Audio","crossOrigin","controls","src","props","mount","appendChild","addEventListener","createMediaElementSource","connect","destination","this","play","update","bind","requestAnimationFrame","matShader","uniforms","time","value","clock","getDelta","particle","rotation","x","y","getByteFrequencyData","bars","children","forEach","child","index","percentIdx","frequencyIdx","scaleMultiplier","scale","z","bar","renderer","render","scene","camera","spitBars","i","height","geometry","THREE","material","color","emissive","shininess","specular","mesh","position","castShadow","push","add","W","innerWidth","H","innerHeight","fog","background","lookAt","spotLight","set","spotLightReverse","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","domElement","shading","normalize","multiplyScalar","onResize","aspect","updateProjectionMatrix","ref","React","Component","renderBody","element","navBody","document","getElementById","gsap","isTweening","animation","TimelineLite","onComplete","pause","progress","style","Animation","to","opacity","ReactDom","ease","home","className","page4","page5","Navbar","location","mia","body","NavButton","handleClick","event","querySelectorAll","classList","remove","target","onClick","Iframe","title","frameBorder","allow","allowFullScreen","App","id","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oTAAO,SAASA,EAAoBC,EAAKC,GACrC,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,EAAID,EAAI,GAAGA,GAYzC,SAASK,EAAwBC,GACpC,OAAOA,EAAIJ,KAAKC,MAAMD,KAAKE,SAAWE,EAAIC,S,WCVxCC,EAAgB,CAAC,SAAU,SAAU,QAAU,SA4JtCC,E,4MAhGbC,WAAa,WACXC,OAAOC,QAAU,KACjB,IACMC,EAAW,IADEF,OAAOG,cAAgBH,OAAOI,oBAE3CC,EAAWH,EAASI,iBAC1B,EAAKC,cAAgB,IAAIC,WAAWH,EAASI,mBAC7C,IAAMC,EAAQ,IAAIC,MAClBD,EAAME,YAAc,YACpBF,EAAMG,UAAW,EACjBH,EAAMI,IAAM,EAAKC,MAAMD,IACvB,EAAKE,MAAMC,YAAYP,GACvBA,EAAMQ,iBAAiB,UAAW,WACZhB,EAASiB,yBAAyBT,GAC1CU,QAAQf,GACpBA,EAASe,QAAQlB,EAASmB,aAC1BC,KAAKjB,SAAWA,EAChBK,EAAMa,OACND,KAAKE,UACLC,KAPgC,kB,EAUpCD,OAAS,WAWP,GAVAE,sBAAsB,EAAKF,QACxB,EAAKG,YACN,EAAKA,UAAUC,SAASC,KAAKC,OAAS,EAAKC,MAAMC,YAGhD,EAAKC,WACN,EAAKA,SAASC,SAASC,GAAK,KAC5B,EAAKF,SAASC,SAASE,GAAK,MAG3B,EAAK/B,SAAU,CAChB,EAAKA,SAASgC,qBAAqB,EAAK9B,eACxC,IAAMX,EAAS,EAAK0C,KAAK1C,OAEzB,EAAKqC,SAASM,SAASC,SAAQ,SAACC,EAAOC,GACrC,IAAMC,EAAaD,EAAQ,EAAKT,SAASM,SAAS3C,OAC5CgD,EAAerD,KAAKC,MAAM,EAAKyC,SAASM,SAAS3C,OAAS+C,GAC1DE,EAAkB,EAAU,EAAKtC,cAAcqC,GAAgB,EAAKrC,cAAcX,OAA5D,GAC5B6C,EAAMK,MAAMX,EAAIU,EAChBJ,EAAMK,MAAMV,EAAIS,EAChBJ,EAAMK,MAAMC,EAAIF,KAElB,EAAKP,KAAKE,SAAQ,SAACQ,EAAKN,GACpB,IAAMC,EAAaD,EAAQ9C,EACrBgD,EAAerD,KAAKC,MAAMI,EAAS+C,GACzCK,EAAIF,MAAMV,EAAI,EAAU,EAAK7B,cAAcqC,GAAgB,EAAKrC,cAAcX,OAA5D,MAIxB,EAAKqD,SAASC,OAAQ,EAAKC,MAAO,EAAKC,S,EAazCC,SAAW,WACT,EAAKf,KAAO,GAEZ,IAAI,IAAIgB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC3B,IAAMC,EAASnE,EAAoB,GAAI,IAEjCoE,EAAW,IAAIC,IADR,EACgCF,EADhC,GAGPG,EAAW,IAAID,IAAwB,CAC3CE,MAAOjE,EAAwBG,GAC/B+D,SAAUlE,EAAwBG,GAClCgE,UAAW,IACXC,SAAU,OAGNC,EAAO,IAAIN,IAAWD,EAAUE,GACtCK,EAAKC,SAAS7B,EAAMmB,EAAI,GAXX,EAWyB,GACtCS,EAAKC,SAAS5B,GAAK,EACnB2B,EAAKC,SAASjB,EAAMO,EAAI,GAbX,EAayB,GACtCS,EAAKE,YAAa,EAClB,EAAK3B,KAAK4B,KAAKH,GACf,EAAKZ,MAAMgB,IAAIJ,K,kEA9IE,IAAD,OAClBzC,KAAK8C,EAAIpE,OAAOqE,WAChB/C,KAAKgD,EAAItE,OAAOuE,YAEhBjD,KAAK6B,MAAQ,IAAIM,IACjBnC,KAAK6B,MAAMqB,IAAM,IAAIf,IAAc,SAAU,MAC7CnC,KAAK6B,MAAMsB,WAAa,IAAIhB,IAAY,UACxCnC,KAAKS,MAAQ,IAAI0B,IAEjBnC,KAAK8B,OAAS,IAAIK,IAAwB,GAAInC,KAAK8C,EAAE9C,KAAKgD,EAAG,GAAK,KAClEhD,KAAK8B,OAAOY,SAAS7B,EAAI,EACzBb,KAAK8B,OAAOY,SAAS5B,EAAI,GACzBd,KAAK8B,OAAOY,SAASjB,EAAI,GACzBzB,KAAK8B,OAAOsB,OAAOpD,KAAK6B,MAAMa,UAE9B1C,KAAKqD,UAAY,IAAIlB,IAAgB,SAAU,IAC/CnC,KAAKqD,UAAUX,SAASY,IAAI,IAAK,IAAK,KACtCtD,KAAKqD,UAAUV,YAAa,EAC5B3C,KAAKuD,iBAAmB,IAAIpB,IAAgB,QAAU,IACtDnC,KAAKuD,iBAAiBb,SAASY,KAAK,IAAK,KAAM,KAC/CtD,KAAKuD,iBAAiBZ,YAAa,EACnC3C,KAAK6B,MAAMgB,IAAI7C,KAAKqD,WACpBrD,KAAK6B,MAAMgB,IAAI7C,KAAKuD,kBAEpBvD,KAAK2B,SAAW,IAAIQ,IACpBnC,KAAK2B,SAAS6B,QAAQxD,KAAK8C,EAAG9C,KAAKgD,GACnChD,KAAK2B,SAAS8B,cAAc/E,OAAOgF,kBACnC1D,KAAK2B,SAASgC,UAAUC,SAAU,EAElC5D,KAAKN,MAAMC,YAAYK,KAAK2B,SAASkC,YAErC7D,KAAK+B,WAEL/B,KAAKW,SAAW,IAAIwB,IAIpB,IAFA,IAAMD,EAAW,IAAIC,IAAqB,GAEjCH,EAAI,EAAGA,EAAI,IAAMA,IAAK,CAC7B,IAAMI,EAAW,IAAID,IAAwB,CAC3CE,MAAOjE,EAAwBG,GAC/BuF,QAAS3B,MAEPM,EAAO,IAAIN,IAAWD,EAAUE,GACpCK,EAAKC,SAASY,IAAIrF,KAAKE,SAAW,GAAKF,KAAKE,SAAW,GAAKF,KAAKE,SAAW,IAAK4F,YACjFtB,EAAKC,SAASsB,eAAe,GAAsB,IAAhB/F,KAAKE,UACxCsE,EAAK7B,SAAS0C,IAAoB,EAAhBrF,KAAKE,SAA8B,EAAhBF,KAAKE,SAA8B,EAAhBF,KAAKE,UAC7D6B,KAAKW,SAASkC,IAAIJ,GAGpBzC,KAAK6B,MAAMgB,IAAI7C,KAAKW,UAEpBjC,OAAOkB,iBAAiB,UAAU,WAAQ,EAAKqE,cAE/CjE,KAAKvB,aACLuB,KAAKE,W,iCA0DLF,KAAK8C,EAAIpE,OAAOqE,WAChB/C,KAAKgD,EAAItE,OAAOuE,YAEhBjD,KAAK8B,OAAOoC,OAASlE,KAAK8C,EAAI9C,KAAKgD,EAEnChD,KAAK8B,OAAOqC,yBACZnE,KAAK2B,SAAS6B,QAAQxD,KAAK8C,EAAG9C,KAAKgD,K,+BA4B3B,IAAD,OACP,OACE,yBAAKoB,IAAK,SAAAA,GAAG,OAAK,EAAK1E,MAAQ0E,S,GArJZC,IAAMC,W,qBCW/B,SAASC,EAAWC,GAChB,IAAMC,EAAUC,SAASC,eAAe,WACrCC,IAAKC,WAAWJ,IAZvB,WACI,IAAMA,EAAUC,SAASC,eAAe,WAClCG,EAAY,IAAIC,IAAa,CAACC,WAAY,WAC5CF,EAAUG,QACVH,EAAUI,SAAS,GACnBT,EAAQU,MAAQ,MAEpB,OAAOL,EAMSM,GAEXC,GAAGZ,EAAS,GAAK,CAAC5D,GAAI,IAAMyE,QAAS,IACrCD,GAAGZ,EAAS,EAAG,CAAC5D,EAAG,IAAMmE,WAAY,kBAAMO,IAAS3D,OAAO4C,EAASC,MACpEY,GAAGZ,EAAS,GAAK,CAAC5D,EAAG,EAAGyE,QAAS,EAAGE,KAAM,wBAC1CvF,OAGT,IAKMwF,EAAO,yBAAKC,UAAU,mBAAf,UACPC,EAAQ,yBAAKD,UAAU,uBACvBE,EAAQ,kBAAC,EAAD,CAAYpG,IAJb,iEAMPqG,E,uKAEA,IAAMC,EAAW,kBAAC,EAAD,CAAQtG,IAXT,qTAYVuG,EAAM,kBAAC,EAAD,CAAQvG,IAXT,gEAYX,OACE,yBAAKkG,UAAU,UACX,kBAAC,EAAD,CAAWM,KAAMP,GAAjB,UACA,kBAAC,EAAD,CAAWO,KAAMF,GAAjB,cACA,kBAAC,EAAD,CAAWE,KAAMD,GAAjB,WACA,kBAAC,EAAD,CAAWC,KAAML,GAAjB,UACA,kBAAC,EAAD,CAAWK,KAAMJ,GAAjB,c,0CAMJrB,EAAWkB,O,GAhBEpB,IAAMC,WAoBrB2B,E,4MASFC,YAAc,SAAAC,GACVzB,SAAS0B,iBAAiB,uBAAuBlF,SAAQ,SAAAL,GAAC,OAAIA,EAAEwF,UAAUC,OAAO,eACjFH,EAAMI,OAAOF,UAAUxD,IAAI,YAC3B0B,EAAW,EAAK9E,MAAMuG,O,uDAVtB,OACI,0BAAMN,UAAU,YAAYc,QAASxG,KAAKkG,aACrClG,KAAKP,MAAMwB,c,GAJJoD,IAAMC,WAgBfuB,I,UC5DTY,E,uKAEF,OACE,4BAAQC,MAAM,QACNlH,IAAKQ,KAAKP,MAAMD,IAChBmH,YAAY,IACZC,MAAM,0EACNC,iBAAe,Q,GAPRxC,IAAMC,WAaZwC,EAtBf,WACE,OACE,yBAAKC,GAAG,MAAMrB,UAAU,OACtB,kBAAC,EAAD,MACA,yBAAKqB,GAAG,cCIMC,QACW,cAA7BtI,OAAOoH,SAASmB,UAEe,UAA7BvI,OAAOoH,SAASmB,UAEhBvI,OAAOoH,SAASmB,SAASC,MACvB,2DCZNC,IAASvF,OACP,kBAAC,IAAMwF,WAAP,KACE,kBAAC,EAAD,OAEF1C,SAASC,eAAe,SDyHpB,kBAAmB0C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4a694f92.chunk.js","sourcesContent":["export function randomNumberInRange(min, max) {\n    return Math.floor(Math.random()*(max-min+1)+min)\n}\n\nexport function getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nexport function getRandomValueFromArray(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}","import React from \"react\";\nimport { randomNumberInRange, getRandomValueFromArray } from \"../util\";\nimport * as THREE from \"three\";\n\nconst COLOR_PALETTE = [0xffdef3, 0xff61be, 0x3b55ce, 0x35212a];\n\nclass Visualizer extends React.Component {\n  componentDidMount() {\n    this.W = window.innerWidth\n    this.H = window.innerHeight\n\n    this.scene = new THREE.Scene();\n    this.scene.fog = new THREE.FogExp2(0xDD709B, 0.007)\n    this.scene.background = new THREE.Color(0xDD709B);\n    this.clock = new THREE.Clock()\n\n    this.camera = new THREE.PerspectiveCamera(95, this.W/this.H, 0.1, 1000);\n    this.camera.position.x = 0\n    this.camera.position.y = 50\n    this.camera.position.z = 10\n    this.camera.lookAt(this.scene.position)\n    \n    this.spotLight = new THREE.SpotLight(0xffffff, 0.8)\n    this.spotLight.position.set(100, 140, 130)\n    this.spotLight.castShadow = true\n    this.spotLightReverse = new THREE.SpotLight(0x534da7, 0.2)\n    this.spotLightReverse.position.set(-100, 140, -130)\n    this.spotLightReverse.castShadow = true\n    this.scene.add(this.spotLight)\n    this.scene.add(this.spotLightReverse)\n    \n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(this.W, this.H);\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n    this.renderer.shadowMap.enabled = true;\n\n    this.mount.appendChild(this.renderer.domElement);\n\n    this.spitBars();\n\n    this.particle = new THREE.Object3D();\n\n    const geometry = new THREE.SphereGeometry(1)\n  \n    for (var i = 0; i < 1000; i++) {\n      const material = new THREE.MeshPhongMaterial({\n        color: getRandomValueFromArray(COLOR_PALETTE),\n        shading: THREE.SmoothShading\n      });\n      var mesh = new THREE.Mesh(geometry, material);\n      mesh.position.set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5).normalize();\n      mesh.position.multiplyScalar(90 + (Math.random() * 100));\n      mesh.rotation.set(Math.random() * 2, Math.random() * 2, Math.random() * 2);\n      this.particle.add(mesh);\n    }\n\n    this.scene.add(this.particle)\n\n    window.addEventListener('resize', () => { this.onResize() });\n\n    this.setupAudio()\n    this.update()\n  }\n\n  setupAudio = () => {\n    window.onclick = null;\n    var AudioContext = window.AudioContext || window.webkitAudioContext; \n    const audioCtx = new AudioContext()\n    const analyser = audioCtx.createAnalyser()\n    this.frequencyData = new Uint8Array(analyser.frequencyBinCount)    \n    const audio = new Audio()\n    audio.crossOrigin = \"anonymous\";\n    audio.controls = false\n    audio.src = this.props.src;\n    this.mount.appendChild(audio)\n    audio.addEventListener('canplay', function() {\n      const audioSource = audioCtx.createMediaElementSource(audio)\n      audioSource.connect(analyser)\n      analyser.connect(audioCtx.destination)\n      this.analyser = analyser;\n      audio.play()\n      this.update();\n    }.bind(this))\n  }\n\n  update = () => {\n    requestAnimationFrame(this.update);\n    if(this.matShader) {\n      this.matShader.uniforms.time.value += this.clock.getDelta();\n    }\n\n    if(this.particle) {\n      this.particle.rotation.x += 0.0020;\n      this.particle.rotation.y -= 0.0020;\n    }\n\n    if(this.analyser) { \n      this.analyser.getByteFrequencyData(this.frequencyData)\n      const length = this.bars.length;\n\n      this.particle.children.forEach((child, index) => {\n        const percentIdx = index / this.particle.children.length\n        const frequencyIdx = Math.floor(this.particle.children.length * percentIdx)\n        const scaleMultiplier = 1 + 15 * (this.frequencyData[frequencyIdx] / this.frequencyData.length)\n        child.scale.x = scaleMultiplier\n        child.scale.y = scaleMultiplier\n        child.scale.z = scaleMultiplier\n      })\n      this.bars.forEach((bar, index) => {\n          const percentIdx = index / length\n          const frequencyIdx = Math.floor(length * percentIdx)\n          bar.scale.y = 1 + 15 * (this.frequencyData[frequencyIdx] / this.frequencyData.length)\n      })\n    }\n\n    this.renderer.render( this.scene, this.camera );\n  }\n\n  onResize() {\n    this.W = window.innerWidth\n    this.H = window.innerHeight\n\n    this.camera.aspect = this.W / this.H\n\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(this.W, this.H)\n  }\n\n  spitBars = () => {\n    this.bars = [];\n    \n    for(var i = 0; i < 100; i++) {\n      const height = randomNumberInRange(10, 15)\n      const size = 5\n      const geometry = new THREE.BoxGeometry(size, height, size)\n\n      const material = new THREE.MeshPhongMaterial({\n        color: getRandomValueFromArray(COLOR_PALETTE),\n        emissive: getRandomValueFromArray(COLOR_PALETTE),\n        shininess: 100,\n        specular: 0xddd\n      })\n\n      const mesh = new THREE.Mesh(geometry, material)\n      mesh.position.x = ((i % 10) * size) - 25\n      mesh.position.y = -5\n      mesh.position.z = ((i / 10) * size) - 25\n      mesh.castShadow = true\n      this.bars.push(mesh);\n      this.scene.add(mesh)\n    }\n  }\n\n  render() {\n    return (\n      <div ref={ref => (this.mount = ref)} />\n    )\n  }\n}\n\nexport default Visualizer;\n\n\n\n\n// this.material.onBeforeCompile = (shader) => {\n//   shader.uniforms.time = { value: this.clock.getElapsedTime() }\n//   shader.vertexShader = `\n//       uniform float time;\n//   ` + shader.vertexShader\n\n//   const token = '#include <begin_vertex>'\n//   const customTransform = `\n//       vec3 transformed = vec3(position);\n//       float dx = position.x;\n//       float dy = position.y;\n//       float freq = sqrt(dx*dx + dy*dy);\n//       float amp = 0.1;\n//       float angle = -time*15.0+freq*6.0;\n//       transformed.z += sin(angle)*amp;\n\n//       objectNormal = normalize(vec3(0.0,-amp * freq * cos(angle),1.0));\n//       vNormal = normalMatrix * objectNormal;\n//   `\n//   shader.vertexShader = shader.vertexShader.replace(token,customTransform)\n//   this.matShader = shader\n// }","import React from 'react';\nimport ReactDom from 'react-dom';\nimport Visualizer from '../3DStuff/visualizer'\nimport { gsap, TimelineLite } from 'gsap/all';\nimport { Iframe } from '../App'\nimport './navbar.css';\n\nfunction Animation() {\n    const navBody = document.getElementById(\"navBody\");\n    const animation = new TimelineLite({onComplete: () => {\n        animation.pause();\n        animation.progress(0);\n        navBody.style = \"\";\n    }});\n    return animation;\n}\n\nfunction renderBody(element) {\n    const navBody = document.getElementById(\"navBody\");\n    if(gsap.isTweening(navBody)) return;\n    let animation = Animation();\n    animation\n        .to(navBody, 0.3, {x: -2000, opacity: 0})\n        .to(navBody, 0, {x: 2000, onComplete: () => ReactDom.render(element, navBody)})\n        .to(navBody, 0.4, {x: 0, opacity: 1, ease: \"elastic.out(.75, 1)\"})\n        .play();\n}\n\nconst googleMapsUrl = \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3471.7839936992755!2d-98.55656528450163!3d29.52265478207502!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x865c60a37282e1f1%3A0x37cdd47cd27f5da3!2s8511%20Rockmoor%2C%20San%20Antonio%2C%20TX%2078230!5e0!3m2!1sen!2sus!4v1587334744014!5m2!1sen!2sus\";\nconst lateJuly = \"https://www.youtube.com/embed/DR6TtBmJ-CE?autoplay=1&mute=1\";\n\nconst song = \"https://thomasvanglabeke.github.io/SoundCity/assets/holy.mp3\"\n\nconst home = <div className=\"NavBody bgGreen\"> Home </div>;\nconst page4 = <div className=\"NavBody bgSawtooth\"></div>;\nconst page5 = <Visualizer src={song}></Visualizer>;\n\nclass Navbar extends React.Component {\n    render() {\n      const location = <Iframe src={googleMapsUrl}></Iframe>\n      const mia = <Iframe src={lateJuly}></Iframe>\n      return (\n        <div className=\"navbar\">\n            <NavButton body={home}> Home </NavButton>\n            <NavButton body={location}> Location </NavButton>\n            <NavButton body={mia}> Video </NavButton>\n            <NavButton body={page4}> Trip </NavButton>\n            <NavButton body={page5}> Ballz </NavButton>\n        </div>\n      );\n    }\n\n    componentDidMount() {\n        renderBody(home)\n    }\n}\n\nclass NavButton extends React.Component {\n    render() {\n        return (\n            <span className=\"NavButton\" onClick={this.handleClick}>\n                {this.props.children}\n            </span>\n        )\n    }\n\n    handleClick = event => {\n        document.querySelectorAll('.NavButton.selected').forEach(x => x.classList.remove('selected'));\n        event.target.classList.add('selected');\n        renderBody(this.props.body);\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport Navbar from './navigation/navbar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div id=\"app\" className=\"App\">\n      <Navbar></Navbar>\n      <div id=\"navBody\"></div>\n    </div>\n  );\n}\n\nclass Iframe extends React.Component {\n  render() {\n    return (\n      <iframe title=\"frame\"\n              src={this.props.src}\n              frameBorder=\"0\" \n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n              allowFullScreen>\n     </iframe>\n    )\n  }\n}\n\nexport default App;\nexport {Iframe};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}